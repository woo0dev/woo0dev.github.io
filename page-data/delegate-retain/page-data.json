{"componentChunkName":"component---src-templates-blog-template-js","path":"/delegate-retain/","result":{"data":{"cur":{"id":"46839cd1-209e-5b5b-95fe-772b645767f6","html":"<h1 id=\"delegate란\" style=\"position:relative;\"><a href=\"#delegate%EB%9E%80\" aria-label=\"delegate란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Delegate란?</h1>\n<p>Delegate 란 하나의 객체가 모든 일을 처리하는 것이 아니라 처리해야 할 일 중 일부를 다른 객체에게 위임하는 것이다.\n객체의 행동을 단순화 시키고 객체간 결합성을 최소화하는 장점이 있다.</p>\n<h1 id=\"retain\" style=\"position:relative;\"><a href=\"#retain\" aria-label=\"retain permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Retain</h1>\n<p>Retain cycle은 메모리가 해제되지 않고 유지되어 누수가 생기는 현상을 말하며 두 객체간의 참조가 강한 순환참조가 생겨 메모리에서 해제되지 않는 현상이다.\n따라서 Delegate 또한 객체간의 참조가 이루어 지기 때문에 retain cycle 현상이 발생할 수 있다.</p>","excerpt":"Delegate란? Delegate 란 하나의 객체가 모든 일을 처리하는 것이 아니라 처리해야 할 일 중 일부를 다른 객체에게 위임하는 것이다.\n객체의 행동을 단순화 시키고 객체간 결합성을 최소화하는 장점이 있다. Retain Retain cycle은 메모리가 해제되지 않고 유지되어 누수가 생기는 현상을 말하며 두 객체간의 참조가 강한 순환참조가 생겨 메모리에서 해제되지 않는 현상이다.\n따라서 Delegate 또한 객체간의 참조가 이루어 지기 때문에 retain cycle 현상이 발생할 수 있다.","frontmatter":{"date":"October 20, 2021","title":"Delegate란 무언인가 설명하고, retain 되는지 안되는지 그 이유를 함께 설명하시오.","categories":"iOS","author":"woo0dev","emoji":"🐻"},"fields":{"slug":"/delegate-retain/"}},"next":{"id":"b35fce32-172c-5b1a-a05f-63b6a9c09597","html":"<h1 id=\"foundation이란\" style=\"position:relative;\"><a href=\"#foundation%EC%9D%B4%EB%9E%80\" aria-label=\"foundation이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Foundation이란?</h1>\n<p>Apple에서 제공하는 기본 프레임워크인 코코아 터치 프레임워크에 포한되어 있는 프레임워크이다.</p>\n<p>Foundation 프레임워크는 데이터 스토리지 및 지속성, 텍스트 처리, 날짜 및 시간 계산, 정렬 및 필터링, 네트워킹을 포함한 애플리케이션과 프레임워크에 대한 기본 기능 계층을 제공한다. Foundation에서 정의한 클래스, 프로토콜, 데이터 유형은 MacOS, iOS, watchOS, tvOS SDK 전반에 걸쳐 사용된다.</p>\n<p>포함된 클래스</p>\n<ul>\n<li>Collections(Sorting, Type…)</li>\n<li>Strings </li>\n<li>Dates and times </li>\n<li>URLs(Networking) </li>\n<li>XML data </li>\n<li>Ports and sockets </li>\n<li>Notification Center interaction</li>\n</ul>","frontmatter":{"date":"October 19, 2021","title":"Foundation Kit은 무엇이고 포함되어 있는 클래스들은 어떤 것이 있을까?","categories":"iOS","author":"woo0dev","emoji":"🐻"},"fields":{"slug":"/FoundationKit/"}},"prev":{"id":"398f4221-3752-5668-987a-f093ba5df437","html":"<h1 id=\"notification\" style=\"position:relative;\"><a href=\"#notification\" aria-label=\"notification permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Notification</h1>\n<p>Notification Center를 통해 등록된 모든 Observer에게 정보를 브로드캐스트하는 컨테이너.</p>\n<h1 id=\"notificationcenter-동작-방식\" style=\"position:relative;\"><a href=\"#notificationcenter-%EB%8F%99%EC%9E%91-%EB%B0%A9%EC%8B%9D\" aria-label=\"notificationcenter 동작 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NotificationCenter 동작 방식</h1>\n<p>특정 객체가 NotificationCenter에 등록된 Event를 발생시키면 해당 Event를 처리할 것이라고 등록된 Observer들이 Event에 대한 행동을 취하는 것이 NotificationCenter가 동작하는 방식이다. 이렇게 특정 객체가 Event를 발생시키는 것을 Post라고 한다.</p>\n<ul>\n<li>Listener (observer) : notifications를 감지</li>\n<li>Sender : 필요할 때 notifications 를 보내주는 역할</li>\n<li>itself : notification center 그 자체.</li>\n</ul>\n<p>Observer가 관찰 시작 → 작업이 발생하면 Sender가 Post → Observer selector 실행</p>","frontmatter":{"date":"October 21, 2021","title":"NotificationCenter 동작 방식과 활용 방안","categories":"iOS","author":"woo0dev","emoji":"🐻"},"fields":{"slug":"/NotificationCenter/"}},"site":{"siteMetadata":{"siteUrl":"https://woo0dev.github.io","comments":{"utterances":{"repo":"woo0dev/woo0dev.github.io"}}}}},"pageContext":{"slug":"/delegate-retain/","nextSlug":"/FoundationKit/","prevSlug":"/NotificationCenter/"}},"staticQueryHashes":["1073350324","2938748437"]}
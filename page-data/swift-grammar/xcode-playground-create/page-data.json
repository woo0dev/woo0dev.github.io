{"componentChunkName":"component---src-templates-blog-template-js","path":"/swift-grammar/xcode-playground-create/","result":{"data":{"cur":{"id":"16a22c68-51d1-5182-b906-f9192981564b","html":"<h1 id=\"playground란\" style=\"position:relative;\"><a href=\"#playground%EB%9E%80\" aria-label=\"playground란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Playground란?</h1>\n<p>WWDC 2016 컨퍼런스에서 처음 발표된 Apple Inc.에서 개발한 Swift 프로그래밍 언어를 위한 교육 도구 및 개발 환경이다.  </p>\n<p>매우 간단하게 직접 코드를 짜면서 Swift언어를 배울 수 있는 방법이지만 나는 이것을 최근에 알았다..\n(그 전에는 커맨드라인을 사용해왔다.)</p>\n<h3 id=\"xcode에서-playground를-생성하는-법\" style=\"position:relative;\"><a href=\"#xcode%EC%97%90%EC%84%9C-playground%EB%A5%BC-%EC%83%9D%EC%84%B1%ED%95%98%EB%8A%94-%EB%B2%95\" aria-label=\"xcode에서 playground를 생성하는 법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Xcode에서 Playground를 생성하는 법</h3>\n<p>Xcode 화면의 왼쪽 상단에 보이는 File → New → Playground 순서대로 선택하여 원하는 폴더에 생성하면 된다.<br>\n<img src=\"/playground1.png\" width=\"500\" height=\"300\"><br>\n기본으로 제공되는 코드를 실행하면 아래와 같이 나오는 것을 확인할 수 있다.  </p>\n<img src=\"/playground2.png\">  \n<p>정말 편하다고 느낀 것을 코드 왼쪽에 보면 실행버튼이 있는데 해당 버튼을 누르면 따로 print처럼 사용하지 않아도 해당 코드의 결과를 왼쪽에서 바로 보여주기 때문에 편할 것 같다.</p>","excerpt":"Playground란? WWDC 2016 컨퍼런스에서 처음 발표된 Apple Inc.에서 개발한 Swift 프로그래밍 언어를 위한 교육 도구 및 개발 환경이다.   매우 간단하게 직접 코드를 짜면서 Swift언어를 배울 수 있는 방법이지만 나는 이것을 최근에 알았다..\n(그 전에는 커맨드라인을 사용해왔다.) Xcode에서 Playground를 생성하는 법 Xcode 화면의 왼쪽 상단에 보이는 File → New → Playground 순서대로 선택하여 원하는 폴더에 생성하면 된다.  기본으로 제공되는 코드를 실행하면 아래와 같이 나오는 것을 확인할 수 있다.   정말 편하다고 느낀 것을 코드 왼쪽에 보면 실행버튼이 있는데 해당 버튼을 누르면 따로 print처럼 사용하지 않아도 해당 코드의 결과를 왼쪽에서 바로 보여주기 때문에 편할 것 같다.","frontmatter":{"date":"November 28, 2021","title":"Xcode에서 Playground 생성하기","categories":"iOS","author":"woo0dev","emoji":"🐻"},"fields":{"slug":"/swift-grammar/xcode-playground-create/"}},"next":{"id":"4cd03cc5-d2cc-5125-b55d-032d04fe25a3","html":"<h1 id=\"swift의-네이밍-규칙\" style=\"position:relative;\"><a href=\"#swift%EC%9D%98-%EB%84%A4%EC%9D%B4%EB%B0%8D-%EA%B7%9C%EC%B9%99\" aria-label=\"swift의 네이밍 규칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swift의 네이밍 규칙</h1>\n<p>네이밍 규칙에는 크게 Lower Camel Case와 Upper Camel Case 두가지가 있는데 언제 어떤 방식을 사용하는지 알아보자</p>\n<h3 id=\"lower-camel-case\" style=\"position:relative;\"><a href=\"#lower-camel-case\" aria-label=\"lower camel case permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lower Camel Case</h3>\n<ul>\n<li>function</li>\n<li>method</li>\n<li>variable</li>\n<li>constent</li>\n</ul>\n<h3 id=\"upper-camel-case\" style=\"position:relative;\"><a href=\"#upper-camel-case\" aria-label=\"upper camel case permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Upper Camel Case</h3>\n<ul>\n<li>class</li>\n<li>struct</li>\n<li>enum</li>\n<li>extension</li>\n</ul>\n<h1 id=\"변수-및-상수-선언-방법과-데이터-타입\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98-%EB%B0%8F-%EC%83%81%EC%88%98-%EC%84%A0%EC%96%B8-%EB%B0%A9%EB%B2%95%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85\" aria-label=\"변수 및 상수 선언 방법과 데이터 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수 및 상수 선언 방법과 데이터 타입</h1>\n<h3 id=\"변수-var\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98-var\" aria-label=\"변수 var permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수 var</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Hong\"</span></code></pre></div>\n<p>추후에 var로 선언된 변수의 값을 바꿀 수 있다.</p>\n<h3 id=\"타입-추론\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85-%EC%B6%94%EB%A1%A0\" aria-label=\"타입 추론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입 추론</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> number <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"hong\"</span></code></pre></div>\n<p>값의 타입이 명확하다면 타입은 생략이 가능하다.</p>\n<h3 id=\"상수-let\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%88%98-let\" aria-label=\"상수 let permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상수 let</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Hong\"</span></code></pre></div>\n<p>값이 할당된 후에는 변경이 불가능하다. 하지만 선언할 때 값을 할당하지 않고 따로 값을 할당해줄 수 있다.</p>\n<h3 id=\"데이터-타입\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85\" aria-label=\"데이터 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 타입</h3>\n<ul>\n<li>\n<p>Character - 유니코드를 사용하여 한글자만 할당 가능한 타입 (ex> ‘a’, ‘가’, ’😀’ 등)</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> someCharacter<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Character</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"가\"</span>\nsomeCharacter <span class=\"token operator\">=</span> <span class=\"token string\">\"A\"</span>\nsomeCharacter <span class=\"token operator\">=</span> <span class=\"token string\">\"😀\"</span></code></pre></div>\n</li>\n<li>\n<p>String - 문자열</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> someString<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"안녕하세요\"</span></code></pre></div>\n</li>\n<li>\n<p>Int - 64bit 정수형</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> someInt<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">100</span>\nsomeInt <span class=\"token operator\">=</span> <span class=\"token number\">100</span></code></pre></div>\n</li>\n<li>\n<p>UInt - 부호가 없는 64bit 정수형</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> someUInt<span class=\"token punctuation\">:</span> <span class=\"token builtin\">UInt</span> <span class=\"token operator\">=</span> <span class=\"token number\">200</span></code></pre></div>\n</li>\n<li>\n<p>Float - 32bit 부동 소수점</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> someFloat<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Float</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.1</span>\nsomeFloat <span class=\"token operator\">=</span> <span class=\"token number\">1</span></code></pre></div>\n</li>\n<li>\n<p>Double - 64bit 부동 소수점</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> someDouble<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Double</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.1</span>\nsomeDouble <span class=\"token operator\">=</span> <span class=\"token number\">1</span></code></pre></div>\n</li>\n<li>\n<p>Bool - true, false (다른 언어와 달리 0, 1같은 표현방식은 허용하지 않음.)</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> someBool<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Bool</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\nsomeBool <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></code></pre></div>\n</li>\n<li>Any - Swift의 모든 타입을 지칭하는 키워드 (nil은 불가능)</li>\n<li>AnyObject - 모든 클래스 타입을 지칭하는 키워드 (nil은 불가능)</li>\n<li>nil - 없음을 의미하는 키워드</li>\n</ul>","frontmatter":{"date":"November 26, 2021","title":"Swift 네이밍 규칙 및 기본데이터 타입","categories":"iOS","author":"woo0dev","emoji":"🐻"},"fields":{"slug":"/swift-grammar/swift-naming/"}},"prev":{"id":"a3e5f94d-40a5-5b8e-8039-d19a91cfe8aa","html":"<h1 id=\"함수란\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%EB%9E%80\" aria-label=\"함수란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수란?</h1>\n<p>함수는 작업의 가장 작은 단위이자 코드의 집합이다.</p>\n<p>함수 사용 방법</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> 함수명<span class=\"token punctuation\">(</span>파라미터 이름<span class=\"token punctuation\">:</span> 데이터 타입<span class=\"token punctuation\">)</span> → 반환타입 <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> 반환 값\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>함수 사용 예시</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Int</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> a<span class=\"token operator\">+</span>b\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>매개변수가 없는 함수</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">String</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>반환 값이 없는 함수</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">printName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Void</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>매개변수에 기본값이 주어지는 함수</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span>friend<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token punctuation\">,</span> me<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Woo\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>friend<span class=\"token delimiter variable\">)</span></span>! I'm <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>me<span class=\"token delimiter variable\">)</span></span>\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span>friend<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Albert\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>전달인자 레이블을 사용하는 함수</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span>from myName<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token punctuation\">,</span> to name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">String</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hello <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>name<span class=\"token delimiter variable\">)</span></span>! I'm <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>myName<span class=\"token delimiter variable\">)</span></span>\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span>from<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Woo\"</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Json\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>전달인자 레이블을 사용하면 사용자 입장에서 매개변수의 역할을 조금 더 명확하게 해줄 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token number\">_</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">String</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hello <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>name<span class=\"token delimiter variable\">)</span></span>\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"woo\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>전달인자 레이블을 사용하지 않기 위해서는 위처럼 파라미터 이름 앞에 언더바를 붙여주면 함수를 사용할 때 파라미터 이름을 쓰지 않아도 된다.</p>\n<p>가변 매개변수 사용 함수</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span>me<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token punctuation\">,</span> friends<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">String</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hello <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>friends<span class=\"token delimiter variable\">)</span></span>! I'm <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>me<span class=\"token delimiter variable\">)</span></span>\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span>me<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Woo\"</span><span class=\"token punctuation\">,</span> friends<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Albert\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Stella\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위처럼 가변 매개변수를 사용할 매개변수 타입 뒤에 …을 붙이면 해당 매개변수는 가변 매개변수가 된다.\n가변 매개변수로 전달받은 값은 배열의 형태로 넘어오는 것을 확인할 수 있다.\n주의할 점은 가변 매개변수는 함수 당 하나만 선언이 가능하다.</p>\n<p>참고\n<a href=\"https://fastcampus.co.kr/dev_online_iosappfinal\">https://fastcampus.co.kr/dev_online_iosappfinal</a></p>","frontmatter":{"date":"December 01, 2021","title":"Swift 함수란?","categories":"iOS","author":"woo0dev","emoji":"🐻"},"fields":{"slug":"/swift-grammar/swift-function/"}},"site":{"siteMetadata":{"siteUrl":"https://woo0dev.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/swift-grammar/xcode-playground-create/","nextSlug":"/swift-grammar/swift-naming/","prevSlug":"/swift-grammar/swift-function/"}},"staticQueryHashes":["1073350324","2938748437"]}
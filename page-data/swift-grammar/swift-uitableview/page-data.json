{"componentChunkName":"component---src-templates-blog-template-js","path":"/swift-grammar/swift-uitableview/","result":{"data":{"cur":{"id":"fb24bcad-d8a8-59be-8348-9ef5b98fdbb5","html":"<h1 id=\"uitableview\" style=\"position:relative;\"><a href=\"#uitableview\" aria-label=\"uitableview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UITableView?</h1>\n<ul>\n<li>여러 개의 Cell을 가지고 있고 하나의 열과 여러 줄의 행을 지니고 있으며, 수직으로만 스크롤이 가능하다.</li>\n<li>섹션을 이용해 행을 그룹화하여 콘턴츠를 더 쉽게 탐색할 수 있다.</li>\n<li>섹션의 헤더와 푸터에 View를 구성하여 추가적인 정보를 표시할 수 있습니다.</li>\n</ul>\n<h3 id=\"uitableviewdelegate\" style=\"position:relative;\"><a href=\"#uitableviewdelegate\" aria-label=\"uitableviewdelegate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UITableViewDelegate</h3>\n<p>TableView의 시각적인 부분을 설정하고, 행의 Action 관리, AccessoryView 지원 그리고 TableView의 개별 행 편집을 도와준다.</p>\n<p>Optional 함수</p>\n<ul>\n<li>didSelectRowAt: 행이 선택되었을 때 호출되는 메서드</li>\n<li>didEdselectRowAt: 행 선택이 해제되었을 때 호출되는 메서드</li>\n<li>heightForRowAt: 특정 위치 행의 높이를 묻는 메서드</li>\n<li>viewForHeaderInSection, viewForFooterInSection: 지정된 Section의 HeaderView, FooterView에 표시할 View가 어떤 건지 묻는 메서드</li>\n<li>heightForHeaderInSection, heightForFooterInSection: 지정된 Section의 HeaderView, FooterView의 높이를 묻는 메서드</li>\n<li>willBeginEditingRowAt: TableView가 편집 모드로 들어갔을 때 호출되는 메서드</li>\n<li>didEndEditingRowAt: TableView가 편집 모드에서 빠져 나왔을 때 호출되는 메서드</li>\n<li>willDisplay: TableView가 Cell을 사용하여 행을 그리기 직전에 호출되는 메서드</li>\n<li>didEndDisplaying: TableView로부터 Cell이 화면에 사라지면 호출되는 메서드</li>\n</ul>\n<h3 id=\"uitableviewdatasource\" style=\"position:relative;\"><a href=\"#uitableviewdatasource\" aria-label=\"uitableviewdatasource permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UITableViewDatasource</h3>\n<p>TableView를 생성하고 수정하는데 필요한 정보를 TableView 객체에 제공</p>\n<p>필수로 구현해야 하는 함수</p>\n<ul>\n<li>numberOfRowsOnSection: 각 Section에 표시할 행의 개수를 리턴하는 메서드</li>\n<li>cellForRowAt: 특정 index Row의 Cell에 대한 정보를 넣어 Cell을 반환하는 메서드</li>\n</ul>\n<p>Optional 함수</p>\n<ul>\n<li>numberOfSections: 총 Section 개수를 묻는 메서드</li>\n<li>titleForHeaderInSection: 특정 Section의 Header Title을 묻는 메서드</li>\n<li>titleForFooterInSection: 특정 Section의 Footer Title을 묻는 메서드</li>\n<li>canEditRowAt: 특정 위치의 행이 편집 가능한지 묻는 메서드</li>\n<li>canMoveRowAt: 특정 위치의 행을 재정렬 할 수 있는지 묻는 메서드</li>\n<li>sectionIndexTitles: TableView Section Index Title을 묻는 메서드</li>\n<li>sectionForSectionIndexTitle: Index에 해당하는 Section을 알려주는 메서드</li>\n<li>editingStyle: 스와이프 모드, 편집 모드에서 버튼을 선택하면 호출되는 메서드(특정 메서드에서는 행에 변경사항을 Commit 해야 함)</li>\n<li>moveRowAt: 행이 다른 위치로 이동되면 어디에서 어디로 이동했는지 알려주는 메서드</li>\n</ul>","excerpt":"UITableView? 여러 개의 Cell을 가지고 있고 하나의 열과 여러 줄의 행을 지니고 있으며, 수직으로만 스크롤이 가능하다. 섹션을 이용해 행을 그룹화하여 콘턴츠를 더 쉽게 탐색할 수 있다. 섹션의 헤더와 푸터에 View를 구성하여 추가적인 정보를 표시할 수 있습니다. UITableViewDelegate TableView의 시각적인 부분을 설정하고, 행의 Action 관리, AccessoryView 지원 그리고 TableView의 개별 행 편집을 도와준다. Optional 함수 didSelectRowAt: 행이 선택되었을 때 호출되는 메서드 didEdselectRowAt: 행 선택이 해제되었을 때 호출되는 메서드 heightForRowAt: 특정 위치 행의 높이를 묻는 메서드 viewForHeaderInSection, viewForFooterInSection: 지정된 Section의 HeaderView, FooterView에 표시할 View가 어떤 건지 묻는 메서드 heig…","frontmatter":{"date":"December 12, 2022","title":"Swift UITableView?","categories":"iOS","author":"woo0dev","emoji":"🐻"},"fields":{"slug":"/swift-grammar/swift-uitableview/"}},"next":{"id":"7994f58e-c1c6-5813-9060-452ac7e406cc","html":"<h3 id=\"content-view-controller\" style=\"position:relative;\"><a href=\"#content-view-controller\" aria-label=\"content view controller permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Content View Controller</h3>\n<ul>\n<li>화면을 구성하는 뷰를 직접 구현하고 관련된 이벤트를 처리하는 View Controller</li>\n</ul>\n<h3 id=\"container-view-controller\" style=\"position:relative;\"><a href=\"#container-view-controller\" aria-label=\"container view controller permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Container View Controller</h3>\n<ul>\n<li>하나 이상의 Child View Controller를 가지고 있다.</li>\n<li>하나 이상의 Child View Controller를 관리하고 레이아웃과 화면 전환을 담당한다.</li>\n<li>화면 구성과 이벤트 관리는 Child View Controller에서 한다.</li>\n<li>Container View Controller는 대표적으로 Navigation Controller와 TabBar Controller가 있다.</li>\n</ul>\n<h3 id=\"uinavigationcontroller\" style=\"position:relative;\"><a href=\"#uinavigationcontroller\" aria-label=\"uinavigationcontroller permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UINavigationController</h3>\n<ul>\n<li>계층구조로 구성된 content를 순차적으로 보여주는 Container View Controller</li>\n<li>Navigation Stack은 기본적으로 First In Last Out 구조를 가지고 있다.</li>\n</ul>\n<p>화면 전환 방법</p>\n<ul>\n<li>\n<p>View Controller의 View 위에 다른 View를 가져와 바꾸기</p>\n<ul>\n<li>메모리 누수 위험이 있기 때문에 지양하는 것이 좋음.</li>\n</ul>\n</li>\n<li>View Controller에서 다른 View Controller를 호출하여 전환하기</li>\n<li>Navigation Controller를 사용하여 화면 전환하기</li>\n<li>화면 전환용 객체 세그웨이(Segueway)를 사용하여 화면 전환하기</li>\n</ul>","frontmatter":{"date":"December 10, 2022","title":"Swift ContentViewController?","categories":"iOS","author":"woo0dev","emoji":"🐻"},"fields":{"slug":"/swift-grammar/swift-contentViewController/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://woo0dev.github.io","comments":{"utterances":{"repo":"woo0dev/woo0dev.github.io"}}}}},"pageContext":{"slug":"/swift-grammar/swift-uitableview/","nextSlug":"/swift-grammar/swift-contentViewController/","prevSlug":""}},"staticQueryHashes":["1073350324","2938748437"]}
{"componentChunkName":"component---src-templates-blog-template-js","path":"/swift-grammar/swift-loop/","result":{"data":{"cur":{"id":"450cbb93-1be0-5fb1-b50f-91229cd8dfb4","html":"<h1 id=\"반복문이란\" style=\"position:relative;\"><a href=\"#%EB%B0%98%EB%B3%B5%EB%AC%B8%EC%9D%B4%EB%9E%80\" aria-label=\"반복문이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>반복문이란?</h1>\n<p>반복적으로 코드가 실행되게 만드는 구문.</p>\n<p>반복문 구문</p>\n<ul>\n<li>for-in\n사용 방법\nfor 루프상수 in 순회대상 {\n실행구문\n}\n루프상수는 반복문 내에서만 사용가능하다.</li>\n</ul>\n<p>범위 연산자를 사용한 예시)</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token number\">4</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>배열을 사용한 예시)</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> array <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>while\n사용 방법\nwhile 조건식 {\n실행구문\n}</li>\n</ul>\n<p>예시)</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> number <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token keyword\">while</span> number <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">{</span>\n    number<span class=\"token operator\">+</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>5가 들어있었던 변수 number가 10보다 작을 때만 1을 더하는 while문이다.</p>\n<ul>\n<li>repeat-while (다른 언어의 do-while)\n조건을 충족하지 못하더라도 무조건 한 번이상 실행되는 반복문.\n사용 방법\nrepeat {\n실행구문\n} while 조건식</li>\n</ul>\n<p>예시)</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">6</span>\n<span class=\"token keyword\">repeat</span> <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">+</span><span class=\"token operator\">=</span><span class=\"token number\">2</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span> x <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></code></pre></div>\n<p>x는 6이고 조건은 6보다 작을 때 실행되도록 하였지만 repeat-while문은 무조건 한 번은 실행되기 때문에 8이 출력되는 것을 확인할 수 있다.</p>","excerpt":"반복문이란? 반복적으로 코드가 실행되게 만드는 구문. 반복문 구문 for-in\n사용 방법\nfor 루프상수 in 순회대상 {\n실행구문\n}\n루프상수는 반복문 내에서만 사용가능하다. 범위 연산자를 사용한 예시) 배열을 사용한 예시) while\n사용 방법\nwhile 조건식 {\n실행구문\n} 예시) 5가 들어있었던 변수 number가 10보다 작을 때만 1을 더하는 while문이다. repeat-while (다른 언어의 do-while)\n조건을 충족하지 못하더라도 무조건 한 번이상 실행되는 반복문.\n사용 방법\nrepeat {\n실행구문\n} while 조건식 예시) x는 6이고 조건은 6보다 작을 때 실행되도록 하였지만 repeat-while문은 무조건 한 번은 실행되기 때문에 8이 출력되는 것을 확인할 수 있다.","frontmatter":{"date":"December 04, 2021","title":"Swift 반복문","categories":"iOS","author":"woo0dev","emoji":"🐻"},"fields":{"slug":"/swift-grammar/swift-loop/"}},"next":{"id":"00fc123b-0623-59eb-89e2-ff77b255f910","html":"<h1 id=\"조건문이란\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EA%B1%B4%EB%AC%B8%EC%9D%B4%EB%9E%80\" aria-label=\"조건문이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조건문이란?</h1>\n<p>주어진 조건에 따라서 어플리케이션을 다르게 동작하도록 하는 것을 말한다.</p>\n<p>조건문 구문</p>\n<ul>\n<li>\n<p>if\n사용법\nif 조건문1 {\n실행구문\n} else if 조건문2 {\n실행구문\n} else {\n실행구문\n}\n예시</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> animal <span class=\"token operator\">=</span> <span class=\"token string\">\"cat\"</span>\n<span class=\"token keyword\">if</span> animal <span class=\"token operator\">==</span> <span class=\"token string\">\"dog\"</span> <span class=\"token punctuation\">{</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"강아지\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> animal <span class=\"token operator\">==</span> <span class=\"token string\">\"cat\"</span> <span class=\"token punctuation\">{</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"고양이\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"모름\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>if 구문은 위처럼 사용하게 되는데 조건이 많다면 if-else if-else 방식으로 여러 조건을 사용할 수 있다. 필요하지 않다면 else-if, else는 생략해도 된다.</p>\n</li>\n<li>\n<p>switch\n사용법\nswitch 조건대상 {\ncase 조건1:\n실행구문\ncase 조건2:\n실행구문\ndefault:\n실행구문\n}\ncase는 조건을 검사하기 위함이고 default는 모든 조건에 해당하지 않았을 때 실행된다.\n예시</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> color <span class=\"token operator\">=</span> <span class=\"token string\">\"green\"</span>\n<span class=\"token keyword\">switch</span> color <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">case</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"빨강\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">case</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"파랑\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">case</span> <span class=\"token string\">\"green\"</span><span class=\"token punctuation\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"초록\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"모름\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>switch 구문은 위처럼 사용하게 되는데 여러가지 조건을 검사하기 위해 사용된다.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> temperature <span class=\"token operator\">=</span> <span class=\"token number\">30</span>\n<span class=\"token keyword\">switch</span> temperature <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">case</span> <span class=\"token operator\">-</span><span class=\"token number\">20</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token number\">9</span><span class=\"token punctuation\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"겨울\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">case</span> <span class=\"token number\">10</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token number\">14</span><span class=\"token punctuation\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"가을\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">case</span> <span class=\"token number\">15</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token number\">25</span><span class=\"token punctuation\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"봄\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">case</span> <span class=\"token number\">26</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token number\">35</span><span class=\"token punctuation\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"여름\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"이상기온\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>switch 구문에서 범위 연산자를 사용한 예시.</p>","frontmatter":{"date":"December 03, 2021","title":"Swift 조건문","categories":"iOS","author":"woo0dev","emoji":"🐻"},"fields":{"slug":"/swift-grammar/swift-conditional/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://woo0dev.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/swift-grammar/swift-loop/","nextSlug":"/swift-grammar/swift-conditional/","prevSlug":""}},"staticQueryHashes":["1073350324","2938748437"]}
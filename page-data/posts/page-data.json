{"componentChunkName":"component---src-templates-category-template-js","path":"/posts","result":{"pageContext":{"currentCategory":"All","categories":["All","iOS","git"],"edges":[{"node":{"id":"9ba76d1f-30ea-56a5-b746-48dbdac2cf0e","excerpt":"Bounds와 Frame Bounds와 Frame의 차이를 공부하기 전에 먼저 Bounds와 Frame이 뭔지 알아보자 Bounds와 Frame은 UIView의 instance property다. Bounds와 Frame 둘 다 CGRect Type이기 때문에 origin과 size를 가진 사각형으로 그려진다. Frame SuperView(상위뷰)의 좌표시스템 안에서 View의 origin과 size를 나타낸다. 여기서 상위뷰란 한단계 상위뷰를 의미한다. 예를 들어 Frame으로 정의된 View의 origin이나 size를 출력하면 해당 View의 상위뷰 origin과 size가 출력된다. 또한 origin과 size를 수정했을 때도 마찬가지로 상위뷰의 origin과 size가 수정된다. Bounds View의 위치와 크기를 자기 자신의 좌표시스템안에서 origin와 size를 나타낸다. 예를 들어 Bounds로 정의된 View의 origin이나 size를 출력하면 해당 View의…","fields":{"slug":"/bounds-frame-study/"},"frontmatter":{"categories":"iOS","title":"Bounds와 Frame의 차이","date":"September 30, 2021"}},"next":{"fields":{"slug":"/development-without-device/"}},"previous":null},{"node":{"id":"0b08f52a-f4a2-5495-a6aa-7613f485fc87","excerpt":"개발할 때 디바이스가 없으면 할 수 없는 것 하드웨어 가속도 센서, 가압계 센서, 주변광 센서, GPS 센서 기능을 사용할 수 없다. 마우스로 시뮬레이터의 터치를 하기 때문에 두 소가락으로 하는 줌인 줌아웃 등의 기능을 테스트 할 수 없다. 카메라를 사용할 수 없다. 마이크를 사용할 수 없다. 전화기능을 사용할 수 없다. API Apple의 푸시 알림 받기와 보내기 기능을 사용할 수 없다. 사진, 연락처, 캘린더에 엑세스하기 위해 개인 정보 보호 알림을 지원하지 않는다. Handoff 기능을 사용할 수 없다. MessageUI 기능을 사용할 수 없다. 그 외 맥의 성능이 아이폰의 성능보다 훨씬 뛰어나 CPU나 메모리 부담이 얼마나 되는지 알 수 없다. 내트워크 속도 태스트를 할 수 없다. 페이스 아이디는 직접 얼굴 인식은 안되지만 인식됨, 안됨 처리는 할 수 있다.","fields":{"slug":"/development-without-device/"},"frontmatter":{"categories":"iOS","title":"iOS 개발할 때 실제 디바이스가 없으면 할 수 없는 것","date":"September 30, 2021"}},"next":{"fields":{"slug":"/git-study/"}},"previous":{"fields":{"slug":"/bounds-frame-study/"}}},{"node":{"id":"0710e72b-bb85-5941-8a90-c32cd1733093","excerpt":"Git 정리하기 Git은 버전을 편리하게 관리할 수 있도록 도와주는 도구이다. 개인 뿐만 아니라 다른 사람과의 협업을 하는 경우에도 큰 도움이 된다. Git Tool GitHub DeskTop : commands에서 사용할 때 보다 사용할 수 있는 기능이 극히 제한적이다. Sourcetree : 다양한 기능을 사용할 수 있고, 전반적으로 많이 사용하고 있지만 역시 commands에서 사용할 수 있는 명령어보다 적다. GitKraken : UI가 화려한 Tool   Git 설치 여부 확인 방법 Git 설치 여부 확인하기 위해서는 터미널에서 git —version 명령어를 쳤을 때 버전이 나온다면 Git이 설치되어 있는 것이다. Git의 설정 정보 확인 방법 git을 설치하면 git에 대한 모든 설정들을 확인하려면 git config —list 명령어를 활용해 확인 할 수 있다. file로 확인하고 싶다면 git —global -e 명령어를 사용하면 된다. Git의 설정 정보를 특정 …","fields":{"slug":"/git-study/"},"frontmatter":{"categories":"git","title":"Git 정리","date":"September 29, 2021"}},"next":{"fields":{"slug":"/how-to-start-gatsby/"}},"previous":{"fields":{"slug":"/development-without-device/"}}},{"node":{"id":"8c36d57d-9137-5712-8dfa-7b8ec9e68336","excerpt":"내가 블로그를 시작하게 된 계기는 개발이 아닌 관련 공부를 할 때 정리를 하고 싶어서 여러가지 블로그를 찾아보다가 현재 사용중인 GitHub와 연동하여 사용할 수 있는 블로그 라이브러리인 Gatsby를 알게 되어 만들게 되었다. Gatsby로 블로그를 만들기 위해 처음에는 관련 테마를 찾아보고 맘에 드는 테마를 적용하여 만들기로 했다. 이제부터 내가 Gatsby 블로그를 만드는 과정을 소개한다. 원하는 테마의 Gatsby Clone Repository 생성(Repository명은 꼭 GitHubID.github.io) Your old repository’s clone URL에 getsby 테마의 repository url 넣기 cd Repository 주소 \nnpm install npm install gh-pages —save-dev npm run deploy git branch gh-pages Setting-Pages-Source Branch를 gh-pages로 설정 git br…","fields":{"slug":"/how-to-start-gatsby/"},"frontmatter":{"categories":"git","title":"Gatsby 테마로 GitHub Blog 만들기","date":"September 25, 2021"}},"next":null,"previous":{"fields":{"slug":"/git-study/"}}}]}},"staticQueryHashes":["1073350324","2938748437"]}